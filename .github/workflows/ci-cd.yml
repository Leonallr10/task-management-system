name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-build:
    name: Build and Deploy Backend
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Backend with Maven
        working-directory: task-api
        run: mvn clean package

      - name: Build Docker Image for Backend
        working-directory: task-api
        run: docker build -t leolr10/task-api:latest .

      - name: Login to Docker Hub (Backend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image for Backend
        run: docker push leolr10/task-api:latest

      - name: Set up KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config  # Ensure correct permissions
      
            - name: Verify KUBECONFIG Setup
              run: |
                echo "Current context:"
                kubectl config current-context
                echo "Cluster info:"
                kubectl cluster-info
                echo "Nodes:"
                kubectl get nodes || echo "Failed to connect to cluster"

      - name: Deploy Backend to Kubernetes
        run: |
          kubectl apply -f task-api/kubernetes/mongodb.yaml --validate=false
          kubectl apply -f task-api/kubernetes/app.yaml --validate=false
        
          frontend-build:
            name: Build and Deploy Frontend
            runs-on: ubuntu-latest
            steps:
              - name: Checkout Code
                uses: actions/checkout@v3
        
              - name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                  node-version: '18'
                  cache: 'npm'

      - name: Install Frontend Dependencies
        working-directory: task-ui
        run: npm install

      - name: Build Frontend
        working-directory: task-ui
        run: npm run build

      - name: Build Docker Image for Frontend
        working-directory: task-ui
        run: docker build -t leolr10/task-ui:latest .

      - name: Login to Docker Hub (Frontend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image for Frontend
        run: docker push leolr10/task-ui:latest

      # Optional: Deploy frontend to Kubernetes if desired
      #- name: Deploy Frontend to Kubernetes
      #  run: kubectl apply -f task-ui/kubernetes/app.yaml
      #  env:
      #    KUBECONFIG: ${{ secrets.KUBECONFIG }}
