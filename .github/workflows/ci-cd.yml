name: CI/CD Pipeline

# Trigger the workflow on push and pull requests to the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Backend Job: Build, containerize, and deploy the Spring Boot application
  backend-build:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Java 17 for building the Spring Boot application
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      # Build the backend using Maven
      - name: Build Backend with Maven
        working-directory: task-api
        run: mvn clean package

      # Build the Docker image for the backend
      - name: Build Docker Image for Backend
        working-directory: task-api
        run: docker build -t leolr10/task-api:latest .

      # Log in to Docker Hub using secrets
      - name: Login to Docker Hub (Backend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker image to Docker Hub
      - name: Push Docker Image for Backend
        run: docker push leolr10/task-api:latest

      # Set up KUBECONFIG for Kubernetes deployment
      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
      - name: Verify Context
        run: kubectl config current-context
      - name: Get Cluster Info
        run: kubectl cluster-info
      # Verify the Kubernetes connection (optional debugging step)
      - name: Verify KUBECONFIG Setup
        run: |
          echo "Current context:"
          kubectl config current-context
          echo "Cluster info:"
          kubectl cluster-info
          echo "Nodes:"
          kubectl get nodes || echo "Failed to connect to cluster"

      # Deploy MongoDB and the backend application to Kubernetes
      - name: Deploy Backend to Kubernetes
        run: |
          kubectl apply -f task-api/kubernetes/mongodb.yaml --validate=false
          kubectl apply -f task-api/kubernetes/app.yaml --validate=false

  # Frontend Job: Build, containerize, and optionally deploy the Node.js application
  frontend-build:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js 18 for building the frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: task-ui
        run: npm install

      # Build the frontend application
      - name: Build Frontend
        working-directory: task-ui
        run: npm run build

      # Build the Docker image for the frontend
      - name: Build Docker Image for Frontend
        working-directory: task-ui
        run: docker build -t leolr10/task-ui:latest .

      # Log in to Docker Hub using secrets
      - name: Login to Docker Hub (Frontend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker image to Docker Hub
      - name: Push Docker Image for Frontend
        run: docker push leolr10/task-ui:latest

      # Optional: Uncomment to deploy the frontend to Kubernetes
      # - name: Deploy Frontend to Kubernetes
      #   run: kubectl apply -f task-ui/kubernetes/app.yaml --validate=false
      #   env:
      #     KUBECONFIG: $HOME/.kube/config
