name: CI/CD Pipeline with KIND

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-deploy:
    name: Build and Deploy Backend using KIND
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up a KIND cluster (Kubernetes in Docker)
      - name: Set up KIND cluster
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind create cluster --name ci-cluster
          kubectl cluster-info

      # Set up Java 17 for backend build
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # Build the backend using Maven
      - name: Build Backend with Maven
        working-directory: task-api
        run: mvn clean package

      # Build the Docker image for the backend
      - name: Build Docker Image for Backend
        working-directory: task-api
        run: docker build -t leolr10/task-api:latest .

      # Log in to Docker Hub using secrets
      - name: Login to Docker Hub (Backend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the backend Docker image to Docker Hub
      - name: Push Docker Image for Backend
        working-directory: task-api
        run: docker push leolr10/task-api:latest

      # Deploy MongoDB using your Kubernetes manifest
      - name: Deploy MongoDB to KIND Cluster
        run: kubectl apply -f task-api/kubernetes/mongodb.yaml --validate=false

      # Deploy the backend application using your Kubernetes manifest
      - name: Deploy Backend to KIND Cluster
        run: kubectl apply -f task-api/kubernetes/app.yaml

  frontend-deploy:
    name: Build and Deploy Frontend using KIND
    runs-on: ubuntu-latest
    needs: backend-deploy
    steps:
      # Checkout repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js for frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm

      # Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: task-ui
        run: npm install

      # Build the frontend application
      - name: Build Frontend
        working-directory: task-ui
        run: npm run build

      # Build the Docker image for the frontend
      - name: Build Docker Image for Frontend
        working-directory: task-ui
        run: docker build -t leolr10/task-ui:latest .

      # Log in to Docker Hub using secrets
      - name: Login to Docker Hub (Frontend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the frontend Docker image to Docker Hub
      - name: Push Docker Image for Frontend
        working-directory: task-ui
        run: docker push leolr10/task-ui:latest

      # Optionally, deploy the frontend to the KIND cluster if you have a Kubernetes manifest
      # - name: Deploy Frontend to KIND Cluster
      #   run: kubectl apply -f task-ui/kubernetes/app.yaml --validate=false
